import type { Type } from '@nestjs/common';
import type { ObjectSerializer } from './object-serializer.js';

/**
 * An {@link ObjectSerializer} that serializes and deserializes objects with types generated by `protobufjs`.
 *
 * As generated by `protobufjs`, the object types (classes) should have the static methods:
 * - `encode(plainObject: object): protobuf.Writer`
 * - `decode(buffer: Uint8Array): Type`.
 */
export class ProtobufjsObjectSerializer implements ObjectSerializer {
  async deserialize<T>(type: Type<T>, data: Buffer): Promise<T> {
    return (type as any).decode(data);
  }

  async serialize(obj: any): Promise<Buffer> {
    const objType = obj.constructor;
    return Buffer.from(objType.encode(obj).finish());
  }
}
